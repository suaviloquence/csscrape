csscrape -> statement_list

statement_list -> statement statement_list
               |  ""

statement -> ID `:` rvalue filter_list `;`

rvalue -> element
       |  leaf

element -> maybe_url selector_list `{` statement_list `}` qualifier

inline -> `<` leaf filter_list `>`

maybe_url -> inline
          |  ""

selector -> selector_fragment selector_combinator_list

# TODO: pseudo-class, attr
named_selector -> `.` ID
               |  `#` ID
               |  ID

# must be nonempty
named_selector_list -> named_selector named_selector_list2
named_selector_list2 -> named_selector named_selector_list2
                     |  ""

selector_fragment -> named_selector_list
                  |  `*`

selector_combinator_list -> selector_combinator selector_fragment selector_combinator_list
                         | ""

selector_combinator -> `+`
                    |  `>`
                    |  `~`
                    |  `,`  # can we wrap in parentheses?  i don't think so.
                    |  ""

qualifier -> `?`
          |  `*`
          |  ""

filter_list -> `|` filter qualifier filter_list
            |  ""

filter -> ID `(` arg_list `)`
       |  `[` ID `:` leaf filter_list `]`

value -> leaf
      |  inline

arg_list ->	ID `:` value arg_list2
         |  ""
# allow optional trailing comma
arg_list2 -> `,` arg_list
           |  ""

leaf        ->  variable
            |   INT
            |   FLOAT
            |   STRING

variable -> `$` ID
